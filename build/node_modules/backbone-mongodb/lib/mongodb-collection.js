//    backbone-mongodb mongodb-document.js
//    (c) 2011 Done.
var _ = require('underscore')._,
    Backbone = require('backbone'),
    Db = require('./db');

//  Document provides the server-side implementation of various functions for the MongoDocument.
//  It is included in the backbone-mongodb implementation when running on the server.
var Collection = module.exports = {

  //  Document Public API
  //  -------------------
  initialize : function() {},  // called on subclasses

  // Refresh the contents of this document from the database
  fetch : function(add, callback) {
    var self = this;
    if (!self._requireRoot()) return;

    self._withCollection(function(err, collection){
      if(err) callback(err);
      else {
        collection.find().toArray(function(err, results){
          if(err) callback(err);
          else {
            if(add) {
              self.add(results);
            } else {
              self.reset(results);
            }
            callback(null);
          }
        });
      }
    });
  },
  
  // Validate and save the contents of this document to the database
  create : function(attrs, callback) {
    var self = this;
    if (!self._requireRoot()) return;

    self._withCollection(function(err, collection){
      if(err) callback(err);
      else {
        if(typeof(attrs.length)=="undefined")
          attrs = [attrs];

        var len = attrs.length;
        for (var i=0; i< len; i++){
          var data = attrs[i];
          data.created_at = new Date();
        }

        collection.insert(attrs, function() {
          self.add(attrs);
          callback(null, attrs);
        })
      }
    });

  },

  //  Private API functions
  //  ---------------------

  // Obtain a database connection or die
  _requireConnection : function() {
    var connection = Db.getConnection();
    if (!connection) {
      throw 'FATAL: Database not connected', this;
    }
    return connection;    
  },
  
  // Request the Database collection associated with this Document
  _withCollection : function(callback) {
    var connection = this._requireConnection();
    connection.collection(this.collectionName, function(err, collection) {
      callback(err, collection);
    });
  },
  
  // Must be the root
  _requireRoot : function(callback) {
    if (this.container) {
      callback('This function cannot be called on an embedded document');
      return false;
    }
    return true;
  }
     
};

